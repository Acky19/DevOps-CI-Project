pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('SONAR-PROJECT') // Ensure this matches your credentials ID
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Start Services') {
            steps {
                script {
                    sh 'npm run compose:up'
                }
            }
        }

        stage('Run Integration Tests') {
            steps {
                script {
                    sh 'npm run test:integration'
                }
            }
        }

        stage('Run End-to-End Tests') {
            steps {
                script {
                    sh 'npm run test:e2e'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'SONAR-PROJECT', variable: 'SONAR_TOKEN')]) {
                        sh """
                        sonar-scanner \
                          -Dsonar.projectKey="SONAR_PROJECT_KEY" \  // Replace with your actual project key
                          -Dsonar.sources=. \
                          -Dsonar.host.url=http://192.168.201.13:9000 \
                          -Dsonar.login=\$SONAR_TOKEN
                        """
                    }
                }
            }
        }
    

    post {
        always {
            echo 'Cleaning up...'
            sh 'npm run compose:down' // Make sure to bring down services if applicable
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
}


